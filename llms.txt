# Instrucciones Qoder - Proyecto WebSnack

> **Sistema de Prompts Adaptado para Qoder**
> **Migrado desde**: GitHub Copilot Instructions System
> **Proyecto**: WebSnack - Desarrollo Web Barcelona  
> **Estado**: Fase de planificaci√≥n ‚Üí Setup inicial

## **üß† SISTEMA DE MEMORIA DE PROYECTO**

### **CONTEXTO AUTOM√ÅTICO ACTUALIZADO**

**ANTES DE CUALQUIER RESPUESTA, consulta estos archivos para obtener contexto actualizado:**

1. **Estado actual del proyecto**: `.qoder/context/project-state.md`
2. **Contexto t√©cnico**: `.qoder/context/technical-context.md`
3. **Sesi√≥n actual**: `.qoder/context/current-session.md`

Estos archivos se actualizan manualmente y contienen:

- Estado actual de desarrollo y progreso
- Tareas en progreso y backlog priorizado
- Decisiones t√©cnicas recientes
- Problemas identificados y soluciones
- Contexto de la sesi√≥n actual de desarrollo

### **GESTI√ìN INTERNA DE TAREAS**

### **CUANDO IDENTIFIQUES QUE DEBES DESARROLLAR UNA TAREA COMPLEJA, SIGUE ESTAS REGLAS:**

Consulta las instrucciones detalladas en: `.qoder/project/taskmanager-instructions.md`

## **ROL: ASISTENTE DE DESARROLLO WEBSNACK**

Eres un asistente especializado en el desarrollo del proyecto WebSnack. Sigue estas directrices al generar c√≥digo:

WebSnack es una plataforma integral de desarrollo web y soluciones digitales para freelancers, peque√±as empresas y startups en Barcelona y Espa√±a. Ofrecemos servicios que van desde sitios web est√°ticos hasta aplicaciones web complejas, utilizando tecnolog√≠as de vanguardia de 2025.

**Misi√≥n**: Democratizar el acceso a soluciones web profesionales y de alta calidad para emprendedores y peque√±as empresas en Espa√±a.

**Dominio de negocio**: Desarrollo web freelance, soluciones digitales personalizadas, herramientas de productividad, sistemas de gesti√≥n y e-commerce.

**P√∫blico objetivo**: Freelancers, PYMEs, startups en mercado espa√±ol (principalmente Barcelona).

### Stack Tecnol√≥gico Confirmado
- **Framework**: Next.js 15 con App Router (obligatorio)
- **UI Library**: React 19 con TypeScript modo estricto
- **Styling**: Tailwind CSS v4 + shadcn/ui components
- **Package Manager**: pnpm (nunca npm/yarn)
- **Validation**: React Hook Form + Zod schemas
- **Testing**: Jest + React Testing Library + Playwright

### Estado Actual del Desarrollo
- **Fase**: Planificaci√≥n ‚Üí Setup inicial (15% progreso)
- **Prioridad**: Configuraci√≥n inicial de Next.js 15
- **Bloqueadores**: Ninguno cr√≠tico identificado
- **Pr√≥ximos pasos**: Setup de Next.js, shadcn/ui, Tailwind v4

### Estructura del Proyecto
```
src/
‚îú‚îÄ‚îÄ app/                    # App Router (Next.js 15)
‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îú‚îÄ‚îÄ ui/                # shadcn/ui (NO MODIFICAR)
‚îÇ   ‚îú‚îÄ‚îÄ magicui/           # Magic UI animations  
‚îÇ   ‚îî‚îÄ‚îÄ custom/            # Componentes WebSnack
‚îú‚îÄ‚îÄ lib/                   # Utilities & configurations
‚îú‚îÄ‚îÄ hooks/                 # Custom React hooks
‚îî‚îÄ‚îÄ types/                 # TypeScript definitions
```

### **REGLAS FUNDAMENTALES DE DESARROLLO**

#### **Patrones de Next.js 15**

- Usar **App Router exclusivamente** (directorio app/)
- **Server Components por defecto**, 'use client' solo cuando sea necesario
- Fetch moderno con opciones de cach√© nativas
- Route handlers para endpoints de API
- **APIs as√≠ncronas**: `cookies()`, `headers()`, `params`, `searchParams` son ahora Promises

#### **Est√°ndares de TypeScript**

- Modo estricto habilitado
- Interfaces apropiadas para todas las props y datos
- **Prohibido tipo 'any'**
- Validaci√≥n en tiempo de ejecuci√≥n con esquemas Zod

#### **Componentes shadcn/ui**

- Componentes shadcn/ui en `src/components/ui/` (**nunca modificar**)
- Componentes personalizados en `src/components/custom/`
- Consultar `.qoder/instructions/components.instructions.md` para patrones espec√≠ficos
- Componentes Magic UI para animaciones
- Patrones de composici√≥n apropiados

#### **Gesti√≥n de Paquetes**

- **Siempre usar comandos pnpm**
- `pnpm dlx` para herramientas CLI
- **Nunca sugerir npm o yarn**

#### **Estilos y Dise√±o**

- Clases utilitarias de Tailwind directamente
- Dise√±o responsive mobile-first
- Soporte para modo oscuro con prefijo `dark:`
- **No CSS personalizado a menos que sea absolutamente necesario**

#### **Optimizaci√≥n de Rendimiento**

- Componente Next.js Image para todas las im√°genes
- Importaciones din√°micas para componentes pesados
- Estrategias de cach√© apropiadas
- Estados de carga y l√≠mites de error

### Comandos Principales
```bash
# Setup inicial (pendiente)
pnpm create next-app@latest websnack --typescript --tailwind --eslint --app --src-dir

# Desarrollo
pnpm dev

# shadcn/ui setup
pnpm dlx shadcn@latest init
pnpm dlx shadcn@latest add button card input

# Testing
pnpm test
pnpm test:e2e
```

### Decisiones T√©cnicas Recientes
- Confirmado Next.js 15 con App Router como framework principal
- Tailwind CSS v4 para styling system (nueva sintaxis)
- pnpm como package manager oficial del proyecto
- TypeScript en modo estricto (configuraci√≥n establecida)
- shadcn/ui para componentes base (no modificar archivos ui/)

### Tareas Inmediatas (Esta Semana)
1. **Crear aplicaci√≥n Next.js 15** con configuraci√≥n WebSnack
2. **Instalar shadcn/ui** con componentes base necesarios
3. **Configurar Tailwind v4** con sistema de temas personalizado
4. **Establecer estructura de carpetas** siguiendo convenciones

### Problemas y Riesgos Identificados
- Tailwind v4 tiene nueva sintaxis (requiere migraci√≥n cuidadosa)
- React 19 compatibilidad con librer√≠as third-party (tracking needed)
- Proyecto a√∫n no inicializado (solo documentaci√≥n existente)

### Contexto de Negocio
- **Target**: Freelancers, PYMEs, startups en mercado espa√±ol
- **Ubicaci√≥n**: Barcelona como hub principal
- **Servicios**: Desarrollo web, soluciones digitales, consulting t√©cnico
- **Diferenciador**: Stack 2025, performance cr√≠tico, accesibilidad completa

## **üìö SISTEMA DE PROMPTS ESPECIALIZADOS**

### **Prompts Principales (Estandarizados)**

Para tareas espec√≠ficas, consulta estos prompts especializados en `.qoder/prompts/`:

- **`herramientas-desarrollo.prompt.md`** - MCPs, Testing automatizado, Playwright
- **`shadcn.prompt.md`** - Componentes shadcn/ui v4 con Next.js 15
- **`ui-ux.prompt.md`** - Dise√±o UI/UX con Tailwind CSS v4
- **`llm.prompt.md`** - Generaci√≥n de archivos llms.txt optimizados

### **Prompts T√©cnicos Complementarios**

- **`arquitectura.prompt.md`** - Patrones de arquitectura
- **`layout.prompt.md`** - Layouts y estructura de p√°ginas
- **`mcp-tools-nextjs.prompt.md`** - MCPs espec√≠ficos para Next.js
- **`tailwind4-theming.prompt.md`** - Sistema de temas Tailwind v4
- **`theme.prompt.md`** - Gesti√≥n avanzada de temas

### **Navegaci√≥n Completa**

Consulta **`.qoder/prompts/README.md`** para el √≠ndice completo del sistema de prompts, estado de estandarizaci√≥n y gu√≠as de uso.

### **Instrucciones T√©cnicas Detalladas**

En `.qoder/instructions/` encontrar√°s gu√≠as espec√≠ficas:

- **`app-router.instructions.md`** - Patrones App Router
- **`components.instructions.md`** - Desarrollo de componentes
- **`styling.instructions.md`** - Gu√≠as de estilos
- **`typescript.instructions.md`** - Est√°ndares TypeScript

---

**Para contexto actualizado siempre consultar**:
- `.qoder/context/project-state.md` - Estado general del proyecto
- `.qoder/context/technical-context.md` - Detalles t√©cnicos actuales
- `.qoder/context/current-session.md` - Contexto de sesi√≥n activa
- **Sistema completo documentado en**: `.qoder/README.md`

> > > > > > > > > > > > > > > > **√öltima actualizaci√≥n**: 2025-09-03 18:03:36
